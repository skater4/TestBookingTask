#!/bin/sh

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
error_file="phpstan.xml"

show_help() {
    echo
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: phpstan.sh [OPTIONS]"
    echo "–û–ø—Ü–∏–∏:"
    echo "  --error-file-name, -efn <—Ñ–∞–π–ª>   –£–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –¥–ª—è –æ—à–∏–±–æ–∫. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é $error_file"
    echo "  --gr-by-file, -gbf               –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ –ø–æ —Ñ–∞–π–ª–∞–º."
    echo "  --gr-by-file-save, -gbfs <—Ñ–∞–π–ª>  –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ —Ñ–∞–π–ª–∞–º."
    echo "  --gr-by-err, -gbe                –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ –ø–æ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—é."
    echo "  --gr-by-err-save, -gbes <—Ñ–∞–π–ª>   –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—é."
    echo "  --help, -h                       –í—ã–≤–æ–¥–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ."
    echo
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./phpstan.sh --error-file-name phpstan.xml -gbf"
    echo "  ./phpstan.sh -efn gr-by-file.log --gr-by-err-save gr-by-err.log"
    echo
    echo
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [ "$#" -gt 0 ]; do
    case "$1" in
        --help|-h)
            show_help
            exit 0
            ;;
        --error-file-name|-efn)
            shift # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç—É
            if [ "$#" -gt 0 ]; then
                error_file="$1"
                shift
            else
                echo "${RED}Error: –Ω–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ --error-file-name${NO_COLOR}"
                exit 1
            fi
            ;;
        -efn)
            shift
            if [ "$#" -gt 0 ]; then
                error_file="$1"
                shift
            else
                echo "${RED}Error: –Ω–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ -efn${NO_COLOR}"
                exit 1
            fi
            ;;
        --gr-by-file|-gbf)
            shift
            gr_by_file=1
            ;;
        --gr-by-file-save|-gbfs)
            shift
            if [ "$#" -gt 0 ]; then
                gr_by_file=1
                grouped_by_file_output="$1"
                shift
            else
                echo "${RED}Error: –Ω–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ --gr-by-file${NO_COLOR}"
                exit 1
            fi
            ;;
        --gr-by-err|-gbe)
            shift
            gr_by_err=1
            ;;
        --gr-by-err-save|-gbes)
            shift
            if [ "$#" -gt 0 ]; then
                gr_by_err=1
                grouped_by_err_output="$1"
                shift
            else
                echo "${RED}Error: –Ω–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ --gr-by-err${NO_COLOR}"
                exit 1
            fi
            ;;
        *)
            echo "${RED}Error: –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä $1${NO_COLOR}"
            exit 1
            ;;
    esac
done

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'      # –ö—Ä–∞—Å–Ω—ã–π
GREEN='\033[0;32m'    # –ó–µ–ª–µ–Ω—ã–π
YELLOW='\033[1;33m'   # –ñ–µ–ª—Ç—ã–π
NO_COLOR='\033[0m'    # –ë–µ–∑ —Ü–≤–µ—Ç–∞


echo ""
echo "${GREEN}Start Analyze${NO_COLOR}"
echo ""

# –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –æ—à–∏–±–∫–∞–º–∏
if [ -f "$error_file" ]; then
    rm "$error_file"
    if [ -f "$error_file" ]; then
        echo ""
    else
        echo "üóëÔ∏è  Removed $error_file file."
        echo ""
    fi
fi

# –ó–∞–ø—É—Å–∫ PHPStan –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ —Ñ–∞–π–ª
./vendor/bin/phpstan analyse --error-format=checkstyle --memory-limit=1G > "$error_file"

error_occurred=0
error_count=0
total_files=$(grep -o '<file name=' "$error_file" | wc -l)

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –æ—à–∏–±–æ–∫
temp_file=$(mktemp)
errors_grouped_file=$(mktemp)
file_grouped_errors=$(mktemp)
unique_messages_file=$(mktemp)

# –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ phpstan.xml
current_file=""
while IFS= read -r line; do
    # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–≥ <file>, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    if echo "$line" | grep -q '<file name='; then
        current_file=$(echo "$line" | grep -o 'name="[^"]*"' | sed 's/name="//;s/"//')
    fi

    # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–≥ <error>, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    if echo "$line" | grep -q '<error'; then
        line_num=$(echo "$line" | grep -o 'line="[0-9]*"' | sed 's/line="//;s/"//')
        error_message=$(echo "$line" | grep -o 'message="[^"]*"' | sed 's/message="//;s/"//')

        # –ï—Å–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º "Unknown file"
        if [ -z "$current_file" ]; then
            current_file="Unknown file"
        fi

        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –æ—à–∏–±–∫–∏
        unique_error_key="${current_file}:${line_num}:${error_message}"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —Ç–∞–∫–∞—è –æ—à–∏–±–∫–∞ —É–∂–µ –≤—ã–≤–µ–¥–µ–Ω–∞
        if ! grep -Fxq "$unique_error_key" "$temp_file"; then
            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥–∏–º
            echo "$unique_error_key" >> "$temp_file"
            #echo "  ${YELLOW}Error in file ${NO_COLOR}$current_file ${YELLOW}on line ${NO_COLOR}$line_num${YELLOW}:${RED} $error_message"
            error_occurred=1
            error_count=$((error_count + 1))

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø–æ –æ—à–∏–±–∫–∞–º, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å @@@
            echo "$error_message@@@$current_file:$line_num" >> "$errors_grouped_file"

             # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø–æ —Ñ–∞–π–ª–∞–º, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å @@@
            echo "$current_file@@@$line_num: $error_message" >> "$file_grouped_errors"
        fi

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if ! grep -Fxq "$error_message" "$unique_messages_file"; then
            echo "$error_message" >> "$unique_messages_file"
        fi
    fi
done < "$error_file"

# –ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
unique_errors_count=$(wc -l < "$unique_messages_file")


# –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ñ–∞–π–ª–∞–º
if [ -n "$gr_by_file" ]; then
    if [ -f "$file_grouped_errors" ]; then
        echo "====================================================================="
        echo "====================================================================="
        echo ""
        echo "${GREEN}Grouped errors by files:${NO_COLOR}"
        echo ""
        echo "====================================================================="
        output=$(echo ""
        sort "$file_grouped_errors" | awk -F'@@@' '
        BEGIN {
            yellow = "'${YELLOW}'"
            nocolor = "'${NO_COLOR}'"
        }
        {
            errors[$1] = errors[$1] "\n  " $2
        }
        END {
            for (msg in errors) {
                print yellow msg nocolor errors[msg] "\n"
            }
        }')

        echo "$output"

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
        if [ -n "$grouped_by_file_output" ]; then
            rm "$grouped_by_file_output"
            echo "$output" > "$grouped_by_file_output"
            echo "üìù Saved grouped errors by files in: $grouped_by_file_output"
        fi

        if [ -f "$errors_grouped_file" ]; then
            echo ""
            echo ""
        fi
    fi
fi


# –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –æ—à–∏–±–∫–∞–º
if [ -n "$gr_by_err" ]; then
    if [ -f "$errors_grouped_file" ]; then
        echo "====================================================================="
        echo "====================================================================="
        echo ""
        echo "${GREEN}Grouped errors by message:${NO_COLOR}"
        echo ""
        echo "====================================================================="
        output=$(echo ""
        sort "$errors_grouped_file" | awk -F'@@@' '
        BEGIN {
            yellow = "'${YELLOW}'"
            nocolor = "'${NO_COLOR}'"
        }
        {
           errors[$1] = errors[$1] "\n  " $2
        }
        END {
            for (msg in errors) {
                print yellow msg nocolor errors[msg] "\n"
            }
        }')

        echo "$output"

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
        if [ -n "$grouped_by_err_output" ]; then
            rm "$grouped_by_err_output"
            echo "$output" > "$grouped_by_err_output"
            echo "üìù Saved grouped errors by names in: $grouped_by_err_output"
        fi

        if [ -f "$errors_grouped_file" ]; then
            echo ""
            echo ""
        fi
    fi
fi

echo ""
if [ $error_occurred -eq 0 ]; then
    echo "${GREEN}‚úÖ Analysis completed successfully !"
else
    echo "${YELLOW}Check the output for details in: ${NO_COLOR}$error_file"
    echo "${RED}‚ùå Analysis completed with ${NO_COLOR}$error_count ${YELLOW}(unique ${unique_errors_count}) ${RED}errors in ${NO_COLOR}$total_files ${RED}files.${NO_COLOR}"
fi
echo ""

echo "${NO_COLOR}"

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
rm -f "$temp_file"
rm -f "$unique_messages_file"
rm -f "$errors_grouped_file"
rm -f "$file_grouped_errors"

exit
